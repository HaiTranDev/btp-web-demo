{"version":3,"sources":["components/Helmet/index.jsx","assets/images/prev-icon.svg","assets/images/blue-prev-icon.svg","assets/images/union.svg","assets/images/blue-fast-forward.svg","components/Table/Pagination.jsx","components/Table/natureSorting.js","components/Table/Table.jsx","components/Tag/Tag.jsx","containers/TransferHistory/HistoryDetails.jsx","components/Button/BackButton.jsx","assets/images/vector.svg","containers/TransferHistory/TransferHistory.jsx"],"names":["Helmet","memo","title","children","displayName","primaryBrandLight","colors","primaryBrandBG","primaryBrandBase","Wrapper","styled","div","fastForward","bFastForward","StyledPagination","AntdPagination","SubTitleMixin","smBold","prevIcon","bPrevIcon","Pagination","current","total","pageSize","setCurrent","props","totalPage","Math","ceil","className","onClick","descendingComparator","x","y","orderBy","a","b","a1","b1","as","bs","rx","rd","rz","isNaN","String","toLowerCase","test","match","length","shift","replace","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","myTimer","TableStyled","antdTable","backgroundColor","bodyText","TextMixin","sm","md","headerColor","headerText","grayLine","hoverColor","media","Table","pagination","columns","loading","getItemsHandler","sortOptions","dataSource","rest","useState","isLoading","setIsLoading","totalItem","limit","useEffect","setTimeout","clearTimeout","indicator","Loader","size","borderSize","onChange","page","showSizeChanger","showLessItems","defaultProps","grayBG","TagStyled","grayAccent","color","Tag","dayjs","extend","relativeTime","StyledHistoryDetails","smallDesktop","tertiaryBase","getStatus","statusCode","successState","text","warningState","errorState","CopyAddress","hashShortener","Icon","icon","width","HistoryDetails","txHash","onClose","details","setDetails","isFetching","setIsFetching","getTransferHistoryByTxHash","transferData","content","console","log","getTransactionDetails","tokenPrice","useTokenToUsd","tokenName","display","setDisplay","value","toSeparatedNumberString","status","blockTime","fromNow","format","networkNameSrc","fromAddress","networkNameDst","toAddress","networkFee","bptFee","nativeToken","StyledBackButton","button","backIcon","BackButton","url","useHistory","goBack","push","onBack","type","dataIndex","render","toUpperCase","TransferHistoryStyled","grayText","xl","TransferHistory","showDetails","setShowDetails","selectedRow","setSelectedRow","historySource","setHistorySource","setPagination","assetName","from","to","filters","setFilters","useDispatch","handleError","modal","getNetworks","network","networks","useSelect","selectNetwotks","cache","assets","label","renderLabel","renderItem","tokenOptionList","symbol","TextWithIcon","networkOptions","forEach","id","name","iconURL","process","pathLogo","substring","fetchDataHandler","getTransferHistory","history","key","onSelectChange","event","selectorName","target","Select","e","options","src","VectorSrc","darkBG","onRow","r"],"mappings":"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","file":"static/js/6.b1797e09.chunk.js","sourcesContent":["import { memo } from 'react';\nimport { Helmet as ReactHelmet } from 'react-helmet-async';\n\nexport const Helmet = memo(({ title, children }) => {\n  return (\n    <ReactHelmet>\n      <title>BTP - {title}</title>\n      {children}\n    </ReactHelmet>\n  );\n});\n\nHelmet.displayName = 'Helmet';\n","export default __webpack_public_path__ + \"static/media/prev-icon.99206fe9.svg\";","export default __webpack_public_path__ + \"static/media/blue-prev-icon.29c12a67.svg\";","export default __webpack_public_path__ + \"static/media/union.8eae41b2.svg\";","export default __webpack_public_path__ + \"static/media/blue-fast-forward.0a6e85de.svg\";","import styled from 'styled-components/macro';\nimport { Pagination as AntdPagination } from 'antd';\nimport { SubTitleMixin } from 'components/Typography/SubTitle';\nimport { colors } from 'components/Styles/Colors';\n\nimport prevIcon from 'assets/images/prev-icon.svg';\nimport bPrevIcon from 'assets/images/blue-prev-icon.svg';\nimport fastForward from 'assets/images/union.svg';\nimport bFastForward from 'assets/images/blue-fast-forward.svg';\n\nconst { primaryBrandLight, primaryBrandBG, primaryBrandBase } = colors;\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .fast-forward {\n    height: 36px;\n    width: 36px;\n    background-color: transparent;\n    border: 1px solid ${primaryBrandLight};\n    border-radius: 4px;\n    margin-right: 8px;\n    background: transparent center / 37% no-repeat url('${fastForward}');\n\n    :hover {\n      border-color: ${primaryBrandBase};\n      background-image: url('${bFastForward}');\n    }\n  }\n\n  .fast-forward__next {\n    margin-right: 0;\n    margin-left: 8px;\n    transform: rotate(180deg);\n  }\n`;\n\nconst StyledPagination = styled(AntdPagination)`\n  display: inline-flex;\n  align-items: center;\n\n  & > li:not(:last-child) {\n    margin-right: 8px;\n    text-align: center;\n  }\n\n  > .ant-pagination-item,\n  > .ant-pagination-prev,\n  > .ant-pagination-next,\n  > .ant-pagination-jump-next,\n  > .ant-pagination-jump-prev {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    cursor: pointer !important;\n    ${SubTitleMixin.smBold};\n\n    color: ${primaryBrandLight};\n    transition: none;\n    background-color: transparent;\n    border: 1px solid ${primaryBrandLight};\n    border-radius: 4px;\n\n    min-width: unset;\n    height: 36px;\n    width: 36px;\n\n    > a {\n      color: inherit;\n      padding: 0;\n      width: 100%;\n    }\n\n    .ant-pagination-item-container {\n      svg {\n        display: none;\n      }\n\n      .ant-pagination-item-ellipsis {\n        color: ${primaryBrandLight};\n      }\n    }\n\n    button.ant-pagination-item-link {\n      display: none;\n    }\n\n    :hover {\n      border-color: ${primaryBrandBase};\n      color: ${primaryBrandBase};\n\n      .ant-pagination-item-ellipsis {\n        color: ${primaryBrandBase};\n      }\n    }\n\n    :active {\n      background-color: rgba(84, 101, 255, 0.2);\n    }\n\n    &.ant-pagination-item-active {\n      color: ${primaryBrandBG};\n      background-color: ${primaryBrandBase};\n      border-color: ${primaryBrandBase};\n    }\n  }\n\n  > .ant-pagination-jump-next,\n  > .ant-pagination-jump-prev {\n    .anticon {\n      opacity: 0 !important;\n    }\n\n    :hover,\n    :focus {\n      .ant-pagination-item-ellipsis {\n        opacity: 1;\n      }\n    }\n\n    .ant-pagination-item-ellipsis {\n      color: ${primaryBrandLight};\n    }\n  }\n\n  > .ant-pagination-prev,\n  > .ant-pagination-next {\n    position: relative;\n\n    :after {\n      content: '';\n      position: absolute;\n      width: 6.67px;\n      height: 11.67px;\n      background: transparent center / cover no-repeat url('${prevIcon}');\n    }\n\n    :hover {\n      :after {\n        background-image: url('${bPrevIcon}');\n      }\n    }\n\n    &.ant-pagination-next {\n      :after {\n        transform: rotate(180deg);\n      }\n    }\n  }\n`;\n\nexport const Pagination = ({ current, total, pageSize, setCurrent, ...props }) => {\n  const totalPage = Math.ceil(total / pageSize);\n  //const fastForwardStep = 2;\n  // const handleFastForward = (step) => {\n  //   const page = current + step;\n  //   if (page < 1) return;\n  //   if (page > totalPage) {\n  //     setCurrent(totalPage);\n  //     return;\n  //   }\n  //   setCurrent(page);\n  // };\n  return (\n    <Wrapper>\n      <button\n        className=\"fast-forward fast-forward__prev\"\n        onClick={() => {\n          setCurrent(1);\n        }}\n      ></button>\n      <StyledPagination current={current} total={total} pageSize={pageSize} {...props} />\n      <button\n        className=\"fast-forward fast-forward__next\"\n        onClick={() => {\n          setCurrent(totalPage);\n        }}\n      ></button>\n    </Wrapper>\n  );\n};\n","function descendingComparator(x, y, orderBy) {\n  const as = x[orderBy];\n  const bs = y[orderBy];\n\n  var a,\n    b,\n    a1,\n    b1,\n    rx = /(\\d+)|(\\D+)/g,\n    rd = /\\d/,\n    rz = /^0/;\n  if (typeof as == 'number' || typeof bs == 'number') {\n    if (isNaN(as)) return 1;\n    if (isNaN(bs)) return -1;\n    return as - bs;\n  }\n  a = String(as).toLowerCase();\n  b = String(bs).toLowerCase();\n  if (a === b) return 0;\n  if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n  a = a.match(rx);\n  b = b.match(rx);\n  while (a.length && b.length) {\n    a1 = a.shift();\n    b1 = b.shift();\n    if (a1 !== b1) {\n      if (rd.test(a1) && rd.test(b1)) {\n        return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n      } else return a1 > b1 ? 1 : -1;\n    }\n  }\n  return a.length - b.length;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { Table as antdTable } from 'antd';\n\nimport { Pagination } from './Pagination';\nimport { TextMixin } from 'components/Typography/Text';\nimport { Loader } from 'components/Loader';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { stableSort, getComparator } from './natureSorting';\n\nconst TableStyled = styled(antdTable)`\n  width: 100%;\n\n  > .ant-spin-nested-loading {\n    position: relative;\n\n    .ant-spin {\n      position: absolute;\n      display: grid;\n      place-items: center;\n      z-index: 4;\n      width: 100%;\n      height: 100%;\n    }\n\n    .ant-spin-blur {\n      opacity: 0.5;\n      user-select: none;\n    }\n  }\n\n  /* hide empty row */\n  .ant-table-placeholder {\n    display: none;\n  }\n\n  .ant-table-tbody {\n    background-color: ${(props) => props.backgroundColor};\n    ${(props) => (props.bodyText === 'sm' ? TextMixin.sm : TextMixin.md)}\n  }\n\n  .ant-table-thead > tr > th {\n    background: ${(props) => props.headerColor};\n    ${(props) => (props.headerText === 'sm' ? TextMixin.sm : TextMixin.md)}\n  }\n\n  .ant-table-thead > tr > th,\n  .ant-table-tbody > tr > td {\n    height: 48px;\n    border: none;\n    border-bottom: 1px solid ${colors.grayLine};\n    padding: 11.5px 14px;\n    word-break: break-all;\n    text-align: left;\n  }\n\n  .ant-table-thead,\n  .ant-table-tbody {\n    & > tr.ant-table-row-hover:not(.ant-table-expanded-row) > td,\n    & > tr:hover:not(.ant-table-expanded-row) > td {\n      background: ${(props) => props.hoverColor};\n    }\n  }\n\n  table {\n    border-spacing: 0;\n  }\n\n  ${media.md`\n    .ant-table-content {\n      overflow-x: auto;\n    }\n  `};\n`;\n\nlet myTimer;\n\nexport const Table = ({\n  headerColor,\n  headerText,\n  backgroundColor,\n  bodyText,\n  children,\n  hoverColor,\n  pagination = {},\n  columns,\n  loading,\n  getItemsHandler,\n  sortOptions = {},\n  dataSource,\n  ...rest\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [current, setCurrent] = useState(1);\n  const { totalItem, limit } = pagination;\n  const { order, orderBy } = sortOptions;\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (getItemsHandler) getItemsHandler(current)();\n  }, [current]);\n\n  // we don't set loading immediately to avoid blinking UI\n  useEffect(() => {\n    if (loading) {\n      myTimer = setTimeout(() => {\n        if (loading) setIsLoading(true);\n      }, 500);\n    } else {\n      clearTimeout(myTimer);\n      setIsLoading(false);\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"table-component\">\n      <TableStyled\n        headerColor={headerColor}\n        headerText={headerText}\n        backgroundColor={backgroundColor}\n        bodyText={bodyText}\n        hoverColor={hoverColor}\n        columns={columns}\n        dataSource={order ? stableSort(dataSource, getComparator(order, orderBy)) : dataSource}\n        loading={isLoading && { indicator: <Loader size=\"25px\" borderSize=\"3px\" /> }}\n        pagination={false}\n        {...rest}\n      >\n        {children}\n      </TableStyled>\n\n      {totalItem && limit < totalItem ? (\n        <Pagination\n          pageSize={limit}\n          onChange={(page) => {\n            setCurrent(page);\n          }}\n          setCurrent={setCurrent}\n          current={current}\n          total={totalItem}\n          showSizeChanger={false}\n          showLessItems\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  headerText: 'sm',\n  bodyText: 'sm',\n  hoverColor: colors.grayBG,\n};\n","import styled from 'styled-components/macro';\nimport { colors } from '../Styles/Colors';\nconst TagStyled = styled.div`\n  .tag-container {\n    background-color: ${colors.grayAccent};\n    border-radius: 4px;\n    width: fit-content;\n    height: 32px;\n    font-family: Poppins;\n    padding: 4px 16px;\n    font-size: 16px;\n    line-height: 24px;\n    color: ${(props) => props.color};\n    text-align: center;\n    letter-spacing: 0.75px;\n  }\n`;\nexport const Tag = ({ color, children }) => {\n  return (\n    <TagStyled color={color}>\n      <div className=\"tag-container\">{children}</div>\n    </TagStyled>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\nimport { useTokenToUsd } from 'hooks/useTokenToUsd';\n\nimport { Tag } from 'components/Tag';\nimport { Icon } from 'components/Icon/Icon';\nimport { Loader } from 'components/Loader';\nimport { Modal } from 'components/NotificationModal';\n\nimport { getTransferHistoryByTxHash } from 'services/btpServices';\nimport { hashShortener, toSeparatedNumberString } from 'utils/app';\n\nimport { Text } from 'components/Typography';\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\n\nconst StyledHistoryDetails = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  .history-details {\n    width: 100%;\n    height: fit-content;\n    background: ${colors.grayBG};\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 23px;\n    overflow-y: auto;\n    max-height: 90vh;\n    ${media.smallDesktop`\n      max-height: 65vh;\n  `};\n  }\n  .heading {\n    text-align: center;\n    margin-bottom: 33px;\n    width: 100%;\n    position: relative;\n  }\n  .content {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 29px;\n  }\n  .btp-fee {\n    margin-bottom: 0;\n  }\n  .internal-trx {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 9px;\n  }\n  .copy-address {\n    cursor: pointer;\n    color: ${colors.tertiaryBase};\n    > .icon {\n      margin-left: 8.83px;\n      vertical-align: middle;\n    }\n  }\n  ${media.md`\n    .hide-in-mobile {\n      display: none;\n    }\n  `};\n`;\n\nconst getStatus = (statusCode) => {\n  let color = colors.successState;\n  let text = 'Success';\n  if (statusCode === 0) {\n    color = colors.warningState;\n    text = 'Pending';\n  } else if (statusCode === -1) {\n    color = colors.errorState;\n    text = 'Failed';\n  }\n\n  return {\n    color,\n    text,\n  };\n};\nconst CopyAddress = ({ text }) => {\n  return (\n    <CopyToClipboard text={text}>\n      <span className=\"copy-address\">\n        {hashShortener(text)}\n        <Icon icon=\"copy\" color=\"#878491\" width=\"18.33px\" />\n      </span>\n    </CopyToClipboard>\n  );\n};\nexport const HistoryDetails = ({ txHash, onClose }) => {\n  const [details, setDetails] = useState({});\n  const [isFetching, setIsFetching] = useState(true);\n  useEffect(() => {\n    const getTransactionDetails = async () => {\n      try {\n        const transferData = await getTransferHistoryByTxHash(txHash);\n        setDetails(transferData.content);\n        setIsFetching(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTransactionDetails();\n  }, [txHash]);\n  const tokenPrice = useTokenToUsd(details.tokenName, 1);\n  return (\n    <Modal display title=\"Transfer details\" width=\"840px\" setDisplay={() => onClose()}>\n      <StyledHistoryDetails>\n        {isFetching ? (\n          <Loader size={'24px'} borderSize={'2px'} />\n        ) : (\n          <div className=\"history-details\">\n            <div className=\"content\">\n              <Text className=\"md\">Transaction hash</Text>\n              <Text className=\"md\">\n                <CopyAddress text={details.txHash} />\n              </Text>\n            </div>\n\n            <div className=\"content\">\n              <Text className=\"md\">Amount</Text>\n              <Text className=\"md\">\n                {details.value} {details.tokenName} (= $\n                {toSeparatedNumberString(tokenPrice * details.value)})\n              </Text>\n            </div>\n\n            <div className=\"content\">\n              <Text className=\"md\">Status</Text>\n              <Tag color={getStatus(details.status).color}>{getStatus(details.status).text}</Tag>\n            </div>\n            <div className=\"content\">\n              <Text className=\"md\">Time</Text>\n              <Text className=\"md\">\n                {dayjs(details.blockTime).fromNow()}{' '}\n                <span className=\"hide-in-mobile\">\n                  ({dayjs(details.blockTime).format('MMM-DD-YYYY hh:mm:ss A Z')})\n                </span>\n              </Text>\n            </div>\n\n            <div className=\"content\">\n              <Text className=\"md\">From</Text>\n              <Text className=\"md\">\n                <span className=\"hide-in-mobile\">({details.networkNameSrc || 'Unknown'}) </span>\n                <CopyAddress text={details.fromAddress} />\n              </Text>\n            </div>\n\n            <div className=\"content\">\n              <Text className=\"md\">To</Text>\n              <Text className=\"md\">\n                <span className=\"hide-in-mobile\">({details.networkNameDst || 'Unknown'}) </span>\n                <CopyAddress text={details.toAddress} />\n              </Text>\n            </div>\n\n            <div className=\"content\">\n              <Text className=\"md\">Network fee</Text>\n              <Text className=\"md\">\n                {details.networkFee} {details.tokenName} ( $\n                {tokenPrice * toSeparatedNumberString(details.networkFee)})\n              </Text>\n            </div>\n\n            <div className=\"content btp-fee\">\n              <Text className=\"md\">BTP fee</Text>\n              <Text className=\"md\">\n                {details.bptFee} {details.nativeToken}\n              </Text>\n            </div>\n          </div>\n        )}\n      </StyledHistoryDetails>\n    </Modal>\n  );\n};\n","import styled from 'styled-components/macro';\nimport { useHistory } from 'react-router-dom';\n\nimport { Header } from 'components/Typography';\nimport backIcon from '../../assets/images/arrow-icon.svg';\n\nconst StyledBackButton = styled.button`\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 8px;\n    background: transparent center / contain no-repeat url('${backIcon}');\n    transform: rotate(90deg);\n    margin-right: 25.5px;\n  }\n`;\n\nexport const BackButton = ({ children, onClick, url }) => {\n  const { goBack, push } = useHistory();\n\n  const onBack = url\n    ? () => {\n        push(url);\n      }\n    : goBack;\n\n  return (\n    <StyledBackButton type=\"button\" onClick={onClick || onBack}>\n      <Header className=\"md bold\">{children}</Header>\n    </StyledBackButton>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/vector.3023b3d0.svg\";","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelect } from 'hooks/useRematch';\nimport styled from 'styled-components/macro';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nimport { getTransferHistory } from 'services/btpServices';\n\nimport { Helmet } from 'components/Helmet';\nimport { Table } from 'components/Table';\nimport { Tag } from 'components/Tag';\nimport { SelectWithBorder } from 'components/Select';\nimport { HistoryDetails } from './HistoryDetails';\nimport { BackButton } from 'components/Button/BackButton';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { TextWithIcon } from 'components/TextWithIcon';\nimport { Text } from 'components/Typography';\n\nimport { tokenOptionList } from 'utils/constants';\nimport { toSeparatedNumberString } from 'utils/app';\n\nimport VectorSrc from 'assets/images/vector.svg';\n\nconst TableStyled = styled(Table)`\n  margin-top: 18px;\n  overflow-x: auto;\n\n  .select-asset-container {\n    margin-bottom: 34px;\n  }\n\n  ${media.md`\n    .ant-table-content {\n      overflow-x: auto;\n    }\n  `};\n`;\n\n/* eslint-disable react/display-name */\nconst columns = [\n  {\n    title: 'Details',\n    dataIndex: 'txHash',\n    width: '480px',\n  },\n  {\n    title: 'Time',\n    dataIndex: 'blockTime',\n    render: (blockTime) => dayjs(blockTime).fromNow(),\n    width: '180px',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'value',\n    render: (text, dataSource) => text + ' ' + dataSource.tokenName?.toUpperCase(),\n    width: '300px',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    render: (text) => {\n      let status = 'Success';\n      let color = '#5EF38C';\n      switch (text) {\n        case 0:\n          color = '#FFBA49';\n          status = 'Pending';\n          break;\n        case -1:\n          color = '#F05365';\n          status = 'Failed';\n          break;\n      }\n      return <Tag color={color}>{status}</Tag>;\n    },\n    width: '160px',\n  },\n];\n\nconst TransferHistoryStyled = styled.div`\n  padding: 36px 0 60px;\n  margin: 0 auto;\n  color: ${colors.grayText};\n  width: 1120px;\n  max-width: 100%;\n\n  .control-group {\n    align-items: center;\n    margin: 60px 0 42px;\n\n    .selector-group {\n      display: flex;\n\n      .exchange-icon {\n        margin: 22px 32px 0 32px;\n      }\n\n      .select-asset {\n        margin-right: 128px;\n      }\n\n      .select-network {\n        display: flex;\n      }\n    }\n  }\n\n  ${media.xl`\n    width: 100%;\n\n    .select-asset {\n        margin-right: auto !important;\n        margin-bottom: 8px;\n    }\n\n    .control-group {\n      flex-direction: column;\n      align-items: start;\n      margin-left: 24px;\n    }\n\n    .selector-group {\n      margin-top: 20px;\n      flex-direction: column;\n      align-items: center;\n\n      .exchange-icon {\n        width: 15px;\n        margin: 22px 18px 0 18px !important;\n        margin: 20px 0;\n      }\n    }\n  `};\n\n  ${media.md`\n    > .control-group {\n      align-items: center;\n      margin: 20px 0 0;\n\n      .select-asset {\n        width: 100%;\n        margin: 0 0 30px !important;\n      }\n\n      .select-network {\n        flex-direction: column;\n        width: 100%;\n\n        > .exchange-icon {\n          display: none;\n        }\n\n        button {\n          width: 100%;\n          margin-bottom: 10px;\n        }\n      }\n    }\n    \n  \n  `};\n`;\n\nconst TransferHistory = () => {\n  const [showDetails, setShowDetails] = useState(false);\n  const [selectedRow, setSelectedRow] = useState({});\n  const [historySource, setHistorySource] = useState([]);\n  const [pagination, setPagination] = useState({ totalItem: 0, limit: 20 });\n  const [isFetching, setIsFetching] = useState(true);\n\n  const [filters, setFilters] = useState({\n    assetName: '',\n    from: '',\n    to: '',\n  });\n  const { from, to, assetName } = filters;\n\n  const { handleError, getNetworks } = useDispatch(\n    ({ modal: { handleError }, network: { getNetworks } }) => ({\n      handleError,\n      getNetworks,\n    }),\n  );\n  const { networks } = useSelect(({ network: { selectNetwotks } }) => ({\n    networks: selectNetwotks,\n  }));\n\n  useEffect(() => {\n    getNetworks({ cache: true });\n  }, [getNetworks]);\n\n  const assets = [\n    {\n      value: '',\n      label: 'All assets',\n      renderLabel: () => <Text className=\"md\">All assets</Text>,\n      renderItem: () => <Text className=\"md\">All assets</Text>,\n    },\n    ...tokenOptionList.map(({ symbol }) => ({\n      value: symbol,\n      label: symbol,\n      renderLabel: () => <TextWithIcon icon={symbol}>{symbol}</TextWithIcon>,\n      renderItem: () => <TextWithIcon icon={symbol}>{symbol}</TextWithIcon>,\n    })),\n  ];\n\n  let networkOptions = [\n    {\n      value: '',\n      label: 'All networks',\n      renderLabel: () => <Text className=\"md\">All networks</Text>,\n      renderItem: () => <Text className=\"md\">All networks</Text>,\n    },\n  ];\n  networks.forEach((network) => {\n    networkOptions.push({\n      value: network.id,\n      label: network.name,\n      renderLabel: () => (\n        <TextWithIcon iconURL={process.env.REACT_APP_BTP_ENDPOINT + network.pathLogo.substring(1)}>\n          {network.name}\n        </TextWithIcon>\n      ),\n      renderItem: () => (\n        <TextWithIcon iconURL={process.env.REACT_APP_BTP_ENDPOINT + network.pathLogo.substring(1)}>\n          {network.name}\n        </TextWithIcon>\n      ),\n    });\n  });\n\n  const fetchDataHandler = async ({ page, assetName, from, to }) => {\n    try {\n      const transferData =\n        (await getTransferHistory(page - 1, pagination.limit, assetName, from, to)) || {};\n      const dataSource = transferData?.content?.map((history, index) => {\n        return {\n          ...history,\n          key: index,\n        };\n      });\n      setHistorySource(dataSource);\n      setPagination((pagination) => ({ ...pagination, totalItem: transferData.total || 0 }));\n      setIsFetching(false);\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const onClickDetail = (detail) => {\n    setSelectedRow(detail);\n    setShowDetails(true);\n  };\n\n  const onSelectChange = (event, selectorName) => {\n    const { value } = event.target;\n\n    if (value !== filters[selectorName]) {\n      setFilters({ ...filters, [selectorName]: value });\n      fetchDataHandler({ page: 1, assetName, from, to, [selectorName]: value });\n    }\n  };\n  return (\n    <TransferHistoryStyled>\n      <Helmet title=\"Transfer history\" />\n\n      <BackButton url=\"/transfer\">Transfer history</BackButton>\n      <div className=\"control-group\">\n        <div className=\"selector-group\">\n          <div className=\"select-asset\">\n            <SelectWithBorder\n              onChange={(e) => onSelectChange(e, 'assetName')}\n              label=\"Assets type\"\n              options={assets}\n            />\n          </div>\n          <div className=\"select-network\">\n            <SelectWithBorder\n              onChange={(e) => onSelectChange(e, 'from')}\n              label=\"Sending from\"\n              width=\"326px\"\n              options={networkOptions}\n            />\n            <img className=\"exchange-icon\" src={VectorSrc} />\n            <SelectWithBorder\n              onChange={(e) => onSelectChange(e, 'to')}\n              label=\"To\"\n              width=\"326px\"\n              options={networkOptions}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Text className=\"md\">\n        {toSeparatedNumberString(pagination.totalItem)} transaction\n        {pagination.totalItem !== 1 ? 's' : ''} found\n      </Text>\n\n      <TableStyled\n        headerColor={colors.grayAccent}\n        backgroundColor={colors.darkBG}\n        bodyText={'md'}\n        columns={columns}\n        dataSource={historySource}\n        onRow={(r) => ({\n          onClick: () => onClickDetail(r),\n        })}\n        pagination={pagination}\n        loading={isFetching}\n        getItemsHandler={(page) => () => fetchDataHandler({ page, assetName, from, to })}\n      />\n      {showDetails && (\n        <HistoryDetails\n          txHash={selectedRow.txHash}\n          onClose={() => setShowDetails(false)}\n        ></HistoryDetails>\n      )}\n    </TransferHistoryStyled>\n  );\n};\n\nexport default TransferHistory;\n"],"sourceRoot":""}