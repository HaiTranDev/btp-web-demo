{"version":3,"sources":["components/Helmet/index.jsx","assets/images/up-percent-icon.svg","assets/images/down-percent-icon.svg","components/UpDownPercent/UpDownPercent.jsx","assets/images/tooltip-arrow.svg","components/Tooltip/Tooltip.jsx","assets/images/info-icon.svg","components/TextWithInfo/index.js","assets/images/many-lines.svg","containers/Overview/ValuesArea.jsx","containers/Overview/AssetFeeTable.jsx","containers/Overview/FeeBox.jsx","assets/images/token-promotion.svg","containers/Overview/StatisticArea.jsx","containers/Overview/Overview.jsx"],"names":["Helmet","memo","title","children","displayName","Wrapper","styled","Text","up","colors","successState","errorState","sm","graySubText","UpDownPercent","percent","label","isUp","className","src","upIcon","downIcon","alt","Math","abs","div","width","TextMixin","grayText","tooltipArrow","Tooltip","arrowPosition","direction","defaultProps","StyledHeading","SubTitle","grayScaleSubText","TextWithInfo","hasInfo","tooltip","infoIcon","brandSecondaryBase","bgImg","media","xl","ValuesArea","isFetching","data","volume","volumeLast24hChange","mintVolumeLast24hChange","useSelect","valueMint","app","selectValueMint","height","bottom","toSeparatedNumberString","Wapper","grayLine","AssetFeeTable","assets","map","idx","name","value","toUpperCase","shortenNumber","length","arrowDownIcon","md","Feebox","fee","cumulativeAmount","currentAmount","tokenBg","SubTitleMixin","smBold","StatisticArea","networks","totalTransactions","bondedValue","totalNetworks","pathLogo","Icon","iconURL","process","substring","to","Overview","useState","setIsFeching","selectAppInfo","network","selectNetwotks","content","useDispatch","getAppInfo","getNetworks","useEffect","a","cache","fetchData"],"mappings":"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","file":"static/js/7.505a93d2.chunk.js","sourcesContent":["import { memo } from 'react';\nimport { Helmet as ReactHelmet } from 'react-helmet-async';\n\nexport const Helmet = memo(({ title, children }) => {\n  return (\n    <ReactHelmet>\n      <title>BTP - {title}</title>\n      {children}\n    </ReactHelmet>\n  );\n});\n\nHelmet.displayName = 'Helmet';\n","export default __webpack_public_path__ + \"static/media/up-percent-icon.54f593a1.svg\";","export default __webpack_public_path__ + \"static/media/down-percent-icon.62e52361.svg\";","import { memo } from 'react';\nimport styled from 'styled-components/macro';\n\nimport { colors } from '../Styles/Colors';\nimport { Text } from '../Typography';\n\nimport upIcon from '../../assets/images/up-percent-icon.svg';\nimport downIcon from '../../assets/images/down-percent-icon.svg';\n\nconst Wrapper = styled(Text)`\n  color: ${({ up }) => (up ? colors.successState : colors.errorState)} !important;\n  display: inline-block;\n\n  img {\n    margin-right: ${({ sm }) => (sm ? '5.67px' : '6.08px')};\n  }\n  span {\n    font-size: ${({ sm }) => sm && '12px'};\n    display: inline-block;\n\n    &.label {\n      color: ${colors.graySubText};\n      margin-left: 6px;\n    }\n  }\n`;\n\nexport const UpDownPercent = memo(({ percent = 0, sm = false, label = 'in 24h' }) => {\n  const isUp = percent >= 0;\n  return (\n    <Wrapper up={isUp} sm={sm} className=\"sm percent\">\n      <img src={isUp ? upIcon : downIcon} alt=\"icon\" />\n      <span>{Math.abs(percent)}%</span>\n      <span className=\"label\">{label}</span>\n    </Wrapper>\n  );\n});\n\nUpDownPercent.displayName = 'UpDownPercent';\n","export default __webpack_public_path__ + \"static/media/tooltip-arrow.2381878e.svg\";","import { colors } from 'components/Styles/Colors';\nimport styled from 'styled-components/macro';\nimport { TextMixin } from 'components/Typography/Text';\nimport tooltipArrow from 'assets/images/tooltip-arrow.svg';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  padding: 4px 8px;\n  background-color: #1d1b22;\n  border-radius: 4px;\n  border: 1px solid #43404f;\n  width: ${({ width }) => `${width}px`};\n  z-index: 101;\n  div {\n    ${TextMixin.sm}\n    word-break: break-word;\n    color: ${colors.grayText};\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  &:before {\n    content: '';\n    display: inline-block;\n    position: absolute;\n  }\n\n  &.left {\n    &:before {\n      content: '';\n      width: 7.5px;\n      height: 8.66px;\n      background: transparent center / contain no-repeat url('${tooltipArrow}');\n      top: 40%;\n      left: -6px;\n    }\n  }\n\n  &.right {\n    &:before {\n      content: '';\n      width: 7.5px;\n      height: 8.66px;\n      background: transparent center / contain no-repeat url('${tooltipArrow}');\n      top: 40%;\n      right: -7px;\n      transform: rotate(180deg);\n    }\n  }\n  &.top {\n    &:before {\n      content: '';\n      width: 7.5px;\n      height: 8.66px;\n      background: transparent center / contain no-repeat url('${tooltipArrow}');\n      left: 45%;\n      top: -8px;\n      transform: rotate(90deg);\n    }\n  }\n\n  &.bottom {\n    &:before {\n      content: '';\n      width: 7.5px;\n      height: 8.66px;\n      background: transparent center / contain no-repeat url('${tooltipArrow}');\n      left: 44%;\n      bottom: -8px;\n      transform: rotate(-90deg);\n    }\n  }\n`;\n\nexport const Tooltip = ({ arrowPosition, direction, width, children }) => {\n  return (\n    <Wrapper className={direction} arrowPosition={arrowPosition} width={width}>\n      <div>{children || 'Default tooltip message'}</div>\n    </Wrapper>\n  );\n};\n\nTooltip.defaultProps = {\n  direction: 'none',\n  arrowPosition: '50%',\n  width: 204,\n};\n","export default __webpack_public_path__ + \"static/media/info-icon.882099a6.svg\";","import styled from 'styled-components/macro';\nimport { SubTitle } from 'components/Typography';\nimport { Tooltip } from 'components/Tooltip';\nimport { colors } from 'components/Styles/Colors';\nimport infoIcon from '../../assets/images/info-icon.svg';\n\nconst StyledHeading = styled(SubTitle)`\n  color: ${colors.grayScaleSubText};\n  display: inline-flex;\n  margin-bottom: 10px;\n\n  img {\n    padding-left: 8.67px;\n  }\n  .icon-with-tooltip {\n    display: flex;\n    align-items: center;\n  }\n  .icon-with-tooltip:hover .left,\n  .icon-with-tooltip:hover .bottom {\n    display: initial;\n  }\n  .left {\n    display: none;\n    margin-left: 38.42px;\n  }\n  .bottom {\n    display: none;\n    margin-bottom: 100px;\n    margin-left: -77px;\n  }\n`;\n\nexport const TextWithInfo = ({\n  children,\n  hasInfo = true,\n  className,\n  tooltip,\n  width,\n  direction = 'left',\n}) => {\n  return (\n    <StyledHeading className={`sm bold ${className}`}>\n      {children}\n      {hasInfo && (\n        <div className=\"icon-with-tooltip\">\n          <img src={infoIcon} alt=\"icon\" />\n          <Tooltip width={width} direction={direction}>\n            {tooltip}\n          </Tooltip>\n        </div>\n      )}\n    </StyledHeading>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/many-lines.e1255840.svg\";","import styled from 'styled-components/macro';\nimport { useSelect } from 'hooks/useRematch';\n\nimport { TextWithInfo } from 'components/TextWithInfo';\nimport { Header } from 'components/Typography';\nimport { UpDownPercent } from 'components/UpDownPercent';\nimport { Skeleton } from 'components/Loader';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { toSeparatedNumberString } from 'utils/app';\n\nimport bgImg from 'assets/images/many-lines.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n\n  > .value {\n    width: 48.9%;\n    height: 169px;\n    padding: 32px;\n    background: ${colors.brandSecondaryBase} right / contain no-repeat url('${bgImg}');\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n\n    > p.percent {\n      margin-top: 12px;\n    }\n  }\n\n  ${media.xl`\n    flex-direction: column;\n\n    > .value {\n      width: 100%;\n      height: fit-content;\n\n      &:first-child{\n        margin-bottom: 24px;\n      }\n\n      .header-text {\n        word-break: break-all;\n      }\n    }\n  `}\n`;\n\nexport const ValuesArea = ({ isFetching, data }) => {\n  const { volume = 0, volumeLast24hChange, mintVolumeLast24hChange } = data;\n  const { valueMint = 0 } = useSelect(({ app: { selectValueMint } }) => ({\n    valueMint: selectValueMint,\n  }));\n\n  return (\n    <Wrapper>\n      <div className=\"value\">\n        <TextWithInfo tooltip=\"Total amount of volume transacted via BTP in $\">VOLUME</TextWithInfo>\n        {isFetching ? (\n          <>\n            <Skeleton width=\"337px\" height=\"48px\" bottom=\"12px\" />\n            <Skeleton width=\"120px\" height=\"20px\" />\n          </>\n        ) : (\n          <>\n            <Header className=\"md bold\">${toSeparatedNumberString(volume)}</Header>\n            <UpDownPercent percent={volumeLast24hChange} />\n          </>\n        )}\n      </div>\n      <div className=\"value\">\n        <TextWithInfo\n          tooltip=\"Total value (TVL) of all digital assets currently minted on each blockchain by BTP in $\"\n          width={300}\n        >\n          VALUE MINT\n        </TextWithInfo>\n        {isFetching ? (\n          <>\n            <Skeleton width=\"337px\" height=\"48px\" bottom=\"12px\" />\n            <Skeleton width=\"120px\" height=\"20px\" />\n          </>\n        ) : (\n          <>\n            <Header className=\"md bold\">${toSeparatedNumberString(valueMint)} </Header>\n            <UpDownPercent percent={mintVolumeLast24hChange} />\n          </>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components/macro';\n\nimport { TextMixin, Text } from 'components/Typography/Text';\nimport { colors } from 'components/Styles/Colors';\n\nimport { shortenNumber } from 'utils/app';\nimport arrowDownIcon from 'assets/images/arrow-icon.svg';\n\nconst Wapper = styled.div`\n  position: relative;\n\n  > .table-container {\n    max-height: 451px;\n    overflow-y: auto;\n    margin-bottom: 20px;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    > table {\n      width: 100%;\n      ${TextMixin.sm};\n\n      th,\n      td {\n        padding: 10px 0;\n        border-bottom: solid 1px ${colors.grayLine};\n        text-align: left;\n\n        &:nth-child(2) {\n          text-align: right;\n          padding-right: 18px;\n        }\n      }\n    }\n  }\n\n  > .scroll-to-view {\n    text-align: center;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n\n    > img {\n      margin-right: 7px;\n    }\n  }\n`;\n\nexport const AssetFeeTable = ({ assets }) => {\n  return (\n    <Wapper>\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Type</th>\n              <th>Fee</th>\n            </tr>\n          </thead>\n          <tbody>\n            {assets.map(({ name, value }, idx) => (\n              <tr key={idx}>\n                <td>{name.toUpperCase()}</td>\n                <td>{shortenNumber(value)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {assets.length > 10 && (\n        <Text className=\"xs scroll-to-view\">\n          <img src={arrowDownIcon} alt=\"icon\" />\n          Scroll to view more asset fee\n        </Text>\n      )}\n    </Wapper>\n  );\n};\n","import styled from 'styled-components/macro';\n\nimport { AssetFeeTable } from './AssetFeeTable';\nimport { TextWithInfo } from 'components/TextWithInfo';\nimport { TextMixin } from 'components/Typography/Text';\nimport { SubTitle } from 'components/Typography';\nimport { Skeleton } from 'components/Loader';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { toSeparatedNumberString } from 'utils/app';\n\nconst Wrapper = styled.div`\n  width: 48.57%;\n  background-color: ${colors.brandSecondaryBase};\n  color: ${colors.grayText};\n\n  .d-flex {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .medium-text {\n    ${TextMixin.md};\n  }\n\n  .cumulative-amount {\n    margin-bottom: 2px;\n  }\n\n  .current-amount {\n    margin-bottom: 12px;\n  }\n\n  .asset-fee {\n    margin-bottom: 12px;\n  }\n  .fee-text {\n    width: 100%;\n  }\n  .center-skeleton {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n  }\n\n  ${media.xl`\n    .d-flex {\n      flex-direction: column;\n\n      span {\n        margin-top: 12px;\n      }\n    }\n  `}\n`;\n\nexport const Feebox = ({ fee, isFetching }) => {\n  const { cumulativeAmount, currentAmount, assets = [] } = fee;\n  return (\n    <Wrapper className=\"box fee\">\n      <TextWithInfo className=\"fee-text\" hasInfo={false}>\n        FEE\n      </TextWithInfo>\n      {isFetching ? (\n        <div>\n          <Skeleton width=\"480px\" height=\"24px\" bottom=\"12px\" />\n          <Skeleton width=\"480px\" height=\"24px\" bottom=\"22px\" />\n          <Skeleton width=\"100px\" height=\"24px\" bottom=\"10px\" />\n          <Skeleton width=\"480px\" height=\"440px\" bottom=\"12px\" />\n          <div className=\"center-skeleton\">\n            <Skeleton width=\"236px\" height=\"32px\" />\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"cumulative-amount d-flex\">\n            <TextWithInfo\n              tooltip=\"Total cumulative amount that the Fee Aggregation SCORE has received\"\n              className=\"medium-text\"\n            >\n              Total cumulative amount\n            </TextWithInfo>\n            <SubTitle className=\"md bold\">\n              {cumulativeAmount ? toSeparatedNumberString(cumulativeAmount) : 0}\n            </SubTitle>\n          </div>\n          <div className=\"current-amount d-flex\">\n            <TextWithInfo\n              tooltip=\"Total current amount of fee in the Fee Aggregation SCORE\"\n              className=\"medium-text\"\n            >\n              Total current amount of fee\n            </TextWithInfo>\n            <SubTitle className=\"md bold\">\n              {currentAmount ? toSeparatedNumberString(currentAmount) : 0}\n            </SubTitle>\n          </div>\n          <TextWithInfo tooltip=\"Amount of fee for each asset\" className=\"asset-fee medium-text\">\n            Asset fee\n          </TextWithInfo>\n          <AssetFeeTable assets={assets} />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/token-promotion.1cd9a1d8.svg\";","import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nimport { Header, SubTitle } from 'components/Typography';\nimport { SubTitleMixin } from 'components/Typography/SubTitle';\nimport { Icon } from 'components/Icon';\nimport { TextWithInfo } from 'components/TextWithInfo';\nimport { PrimaryButton } from 'components/Button';\nimport { Feebox } from './FeeBox';\nimport { Skeleton } from 'components/Loader';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\n\nimport { shortenNumber } from 'utils/app';\nimport tokenBg from 'assets/images/token-promotion.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .box {\n    padding: 27px 32px;\n    border-radius: 4px;\n    background-color: ${colors.brandSecondaryBase};\n  }\n\n  > .transaction {\n    display: flex;\n    flex-direction: column;\n    width: 22.9%;\n\n    > .value-bonded,\n    > .transaction {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 32px;\n\n      .header-text {\n        margin-bottom: 7px;\n      }\n    }\n\n    > .networks {\n      width: 100%;\n      height: 315px;\n      padding: 0 !important;\n\n      > .amount-of-networks {\n        padding: 23px 15.67px 0 32px;\n      }\n\n      > .network-list {\n        padding: 23px 8px;\n\n        .subtitle-text {\n          height: 40px;\n          padding: 4px 12px;\n          display: flex;\n          align-items: center;\n          border-radius: 4px;\n\n          &:hover {\n            background-color: #312f39;\n          }\n\n          img {\n            margin-right: 8px;\n          }\n        }\n      }\n    }\n  }\n\n  > .promotion {\n    width: 22.9%;\n    min-height: 650px;\n\n    text-align: center;\n    padding: 50px 32px;\n    border-radius: 4px;\n    background: ${colors.brandSecondaryBase} bottom / contain no-repeat url('${tokenBg}');\n\n    > .header-text {\n      margin-bottom: 12px;\n    }\n\n    > .subtitle-text {\n      margin-bottom: 27px;\n    }\n\n    .start-to-transfer {\n      padding: 0;\n      ${SubTitleMixin.smBold};\n    }\n  }\n  .flex {\n    display: flex;\n  }\n  .inline {\n    display: inline-grid;\n  }\n\n  ${media.xl`\n    flex-direction: column;\n    > .transaction, > .fee, > .networks, > .promotion {\n      width: 100%;\n      margin-bottom: 24px;\n    }\n  `}\n`;\n\nexport const StatisticArea = ({ data, networks, isFetching }) => {\n  const { fee = {}, totalTransactions = 0, bondedValue } = data;\n  const totalNetworks = networks.length;\n  return (\n    <Wrapper>\n      <div className=\"transaction\">\n        <div className=\"box value-bonded\">\n          <TextWithInfo className=\"flex\" tooltip=\"Total collective value bonded by Relays\">\n            VALUE BONDED\n          </TextWithInfo>\n          {isFetching ? (\n            <Skeleton width=\"125px\" height=\"36px\" />\n          ) : (\n            <Header className=\"sm bold\" title={bondedValue}>\n              {shortenNumber(bondedValue)}\n            </Header>\n          )}\n        </div>\n\n        <div className=\"box transaction\">\n          <TextWithInfo className=\"flex\" tooltip=\"Total number of transactions on the BTP Network\">\n            TRANSACTIONS\n          </TextWithInfo>\n          {isFetching ? (\n            <Skeleton width=\"125px\" height=\"36px\" />\n          ) : (\n            <Header className=\"sm bold\" title={totalTransactions}>\n              {shortenNumber(totalTransactions)}\n            </Header>\n          )}\n        </div>\n\n        <div className=\"networks box\">\n          <div className=\"amount-of-networks\">\n            <TextWithInfo\n              className=\"flex\"\n              tooltip=\"Total number of transactions on the BTP Network\"\n            >\n              NETWORKS CONNECTED\n            </TextWithInfo>\n            {isFetching ? (\n              <div className=\"inline\">\n                <Skeleton width=\"60px\" height=\"36px\" bottom=\"23px\" />\n                <Skeleton bottom=\"12px\" />\n                <Skeleton bottom=\"12px\" />\n                <Skeleton bottom=\"12px\" />\n                <Skeleton />\n              </div>\n            ) : (\n              <Header className=\"sm bold\">{totalNetworks}</Header>\n            )}\n          </div>\n\n          {!isFetching && (\n            <div className=\"network-list\">\n              {networks.map(({ pathLogo, name }) => (\n                <SubTitle className=\"md bold\" key={name}>\n                  <Icon\n                    iconURL={process.env.REACT_APP_BTP_ENDPOINT + pathLogo.substring(1)}\n                    width=\"24px\"\n                  />\n                  {name}\n                </SubTitle>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Feebox fee={fee} isFetching={isFetching} />\n\n      <div className=\"promotion\">\n        <Header className=\"xs bold\">Transfer your token to many networks</Header>\n        <SubTitle className=\"sm\">More than 30+ cryptocurrencies for swap and auction</SubTitle>\n        <Link to=\"/transfer\">\n          <PrimaryButton width={161} height={44} className=\"start-to-transfer\">\n            Start to transfer\n          </PrimaryButton>\n        </Link>\n      </div>\n    </Wrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelect } from 'hooks/useRematch';\nimport styled from 'styled-components/macro';\n\nimport { ValuesArea } from './ValuesArea';\nimport { StatisticArea } from './StatisticArea';\nimport { Helmet } from 'components/Helmet';\n\nconst Wrapper = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 24px 0;\n`;\n\nconst Overview = () => {\n  const [isFetching, setIsFeching] = useState(true);\n  const {\n    app: { content = {} },\n    networks,\n  } = useSelect(({ app: { selectAppInfo }, network: { selectNetwotks } }) => ({\n    app: selectAppInfo,\n    networks: selectNetwotks,\n  }));\n\n  const { getAppInfo, getNetworks } = useDispatch(\n    ({ app: { getAppInfo }, network: { getNetworks } }) => ({\n      getAppInfo,\n      getNetworks,\n    }),\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getAppInfo();\n      await getNetworks({ cache: true });\n      setIsFeching(false);\n    };\n    fetchData();\n  }, [getAppInfo, getNetworks]);\n\n  return (\n    <Wrapper>\n      <Helmet title=\"Overview\" />\n      <ValuesArea isFetching={isFetching} data={content} />\n      <StatisticArea isFetching={isFetching} data={content} networks={networks} />\n    </Wrapper>\n  );\n};\n\nexport default Overview;\n"],"sourceRoot":""}