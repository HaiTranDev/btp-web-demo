{"version":3,"sources":["components/Helmet/index.jsx","assets/images/prev-icon.svg","assets/images/blue-prev-icon.svg","assets/images/union.svg","assets/images/blue-fast-forward.svg","components/Table/Pagination.jsx","components/Table/natureSorting.js","components/Table/Table.jsx","containers/NetworkPage/NetwotkDetails.jsx","containers/NetworkPage/NetworkPage.jsx"],"names":["Helmet","memo","title","children","displayName","primaryBrandLight","colors","primaryBrandBG","primaryBrandBase","Wrapper","styled","div","fastForward","bFastForward","StyledPagination","AntdPagination","SubTitleMixin","smBold","prevIcon","bPrevIcon","Pagination","current","total","pageSize","setCurrent","props","totalPage","Math","ceil","className","onClick","descendingComparator","x","y","orderBy","a","b","a1","b1","as","bs","rx","rd","rz","isNaN","String","toLowerCase","test","match","length","shift","replace","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","myTimer","TableStyled","antdTable","backgroundColor","bodyText","TextMixin","sm","md","headerColor","headerText","grayLine","hoverColor","media","Table","pagination","columns","loading","getItemsHandler","sortOptions","dataSource","rest","useState","isLoading","setIsLoading","totalItem","limit","useEffect","setTimeout","clearTimeout","indicator","Loader","size","borderSize","onChange","page","showSizeChanger","showLessItems","defaultProps","grayBG","NetworkWrapper","brandSecondaryBase","grayScaleSubText","NetWork","detail","nameToken","volume24h","volume24hUSD","volumeAlTimeUSD","volumeAllTime","shortenNumber","toSeparatedNumberString","NetwotkDetails","currentNetworkID","setLoading","useSelect","networkDetails","network","selectNetworkDetails","useDispatch","getNetworkDetails","setNetworkDetails","then","Network","iconUrl","name","url","Icon","iconURL","href","target","rel","dataIndex","render","text","record","width","align","process","pathLogo","substring","value","NetworkStyled","window","screen","tertiaryBase","NetworkPage","setCurrentNetworkID","networks","selectNetwotks","getNetworks","rowKey","grayAccent","darkBG","onRow","r","id","display","setDisplay"],"mappings":"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","file":"static/js/5.1c8a0705.chunk.js","sourcesContent":["import { memo } from 'react';\nimport { Helmet as ReactHelmet } from 'react-helmet-async';\n\nexport const Helmet = memo(({ title, children }) => {\n  return (\n    <ReactHelmet>\n      <title>BTP - {title}</title>\n      {children}\n    </ReactHelmet>\n  );\n});\n\nHelmet.displayName = 'Helmet';\n","export default __webpack_public_path__ + \"static/media/prev-icon.99206fe9.svg\";","export default __webpack_public_path__ + \"static/media/blue-prev-icon.29c12a67.svg\";","export default __webpack_public_path__ + \"static/media/union.8eae41b2.svg\";","export default __webpack_public_path__ + \"static/media/blue-fast-forward.0a6e85de.svg\";","import styled from 'styled-components/macro';\nimport { Pagination as AntdPagination } from 'antd';\nimport { SubTitleMixin } from 'components/Typography/SubTitle';\nimport { colors } from 'components/Styles/Colors';\n\nimport prevIcon from 'assets/images/prev-icon.svg';\nimport bPrevIcon from 'assets/images/blue-prev-icon.svg';\nimport fastForward from 'assets/images/union.svg';\nimport bFastForward from 'assets/images/blue-fast-forward.svg';\n\nconst { primaryBrandLight, primaryBrandBG, primaryBrandBase } = colors;\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .fast-forward {\n    height: 36px;\n    width: 36px;\n    background-color: transparent;\n    border: 1px solid ${primaryBrandLight};\n    border-radius: 4px;\n    margin-right: 8px;\n    background: transparent center / 37% no-repeat url('${fastForward}');\n\n    :hover {\n      border-color: ${primaryBrandBase};\n      background-image: url('${bFastForward}');\n    }\n  }\n\n  .fast-forward__next {\n    margin-right: 0;\n    margin-left: 8px;\n    transform: rotate(180deg);\n  }\n`;\n\nconst StyledPagination = styled(AntdPagination)`\n  display: inline-flex;\n  align-items: center;\n\n  & > li:not(:last-child) {\n    margin-right: 8px;\n    text-align: center;\n  }\n\n  > .ant-pagination-item,\n  > .ant-pagination-prev,\n  > .ant-pagination-next,\n  > .ant-pagination-jump-next,\n  > .ant-pagination-jump-prev {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    cursor: pointer !important;\n    ${SubTitleMixin.smBold};\n\n    color: ${primaryBrandLight};\n    transition: none;\n    background-color: transparent;\n    border: 1px solid ${primaryBrandLight};\n    border-radius: 4px;\n\n    min-width: unset;\n    height: 36px;\n    width: 36px;\n\n    > a {\n      color: inherit;\n      padding: 0;\n      width: 100%;\n    }\n\n    .ant-pagination-item-container {\n      svg {\n        display: none;\n      }\n\n      .ant-pagination-item-ellipsis {\n        color: ${primaryBrandLight};\n      }\n    }\n\n    button.ant-pagination-item-link {\n      display: none;\n    }\n\n    :hover {\n      border-color: ${primaryBrandBase};\n      color: ${primaryBrandBase};\n\n      .ant-pagination-item-ellipsis {\n        color: ${primaryBrandBase};\n      }\n    }\n\n    :active {\n      background-color: rgba(84, 101, 255, 0.2);\n    }\n\n    &.ant-pagination-item-active {\n      color: ${primaryBrandBG};\n      background-color: ${primaryBrandBase};\n      border-color: ${primaryBrandBase};\n    }\n  }\n\n  > .ant-pagination-jump-next,\n  > .ant-pagination-jump-prev {\n    .anticon {\n      opacity: 0 !important;\n    }\n\n    :hover,\n    :focus {\n      .ant-pagination-item-ellipsis {\n        opacity: 1;\n      }\n    }\n\n    .ant-pagination-item-ellipsis {\n      color: ${primaryBrandLight};\n    }\n  }\n\n  > .ant-pagination-prev,\n  > .ant-pagination-next {\n    position: relative;\n\n    :after {\n      content: '';\n      position: absolute;\n      width: 6.67px;\n      height: 11.67px;\n      background: transparent center / cover no-repeat url('${prevIcon}');\n    }\n\n    :hover {\n      :after {\n        background-image: url('${bPrevIcon}');\n      }\n    }\n\n    &.ant-pagination-next {\n      :after {\n        transform: rotate(180deg);\n      }\n    }\n  }\n`;\n\nexport const Pagination = ({ current, total, pageSize, setCurrent, ...props }) => {\n  const totalPage = Math.ceil(total / pageSize);\n  //const fastForwardStep = 2;\n  // const handleFastForward = (step) => {\n  //   const page = current + step;\n  //   if (page < 1) return;\n  //   if (page > totalPage) {\n  //     setCurrent(totalPage);\n  //     return;\n  //   }\n  //   setCurrent(page);\n  // };\n  return (\n    <Wrapper>\n      <button\n        className=\"fast-forward fast-forward__prev\"\n        onClick={() => {\n          setCurrent(1);\n        }}\n      ></button>\n      <StyledPagination current={current} total={total} pageSize={pageSize} {...props} />\n      <button\n        className=\"fast-forward fast-forward__next\"\n        onClick={() => {\n          setCurrent(totalPage);\n        }}\n      ></button>\n    </Wrapper>\n  );\n};\n","function descendingComparator(x, y, orderBy) {\n  const as = x[orderBy];\n  const bs = y[orderBy];\n\n  var a,\n    b,\n    a1,\n    b1,\n    rx = /(\\d+)|(\\D+)/g,\n    rd = /\\d/,\n    rz = /^0/;\n  if (typeof as == 'number' || typeof bs == 'number') {\n    if (isNaN(as)) return 1;\n    if (isNaN(bs)) return -1;\n    return as - bs;\n  }\n  a = String(as).toLowerCase();\n  b = String(bs).toLowerCase();\n  if (a === b) return 0;\n  if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n  a = a.match(rx);\n  b = b.match(rx);\n  while (a.length && b.length) {\n    a1 = a.shift();\n    b1 = b.shift();\n    if (a1 !== b1) {\n      if (rd.test(a1) && rd.test(b1)) {\n        return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n      } else return a1 > b1 ? 1 : -1;\n    }\n  }\n  return a.length - b.length;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { Table as antdTable } from 'antd';\n\nimport { Pagination } from './Pagination';\nimport { TextMixin } from 'components/Typography/Text';\nimport { Loader } from 'components/Loader';\n\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { stableSort, getComparator } from './natureSorting';\n\nconst TableStyled = styled(antdTable)`\n  width: 100%;\n\n  > .ant-spin-nested-loading {\n    position: relative;\n\n    .ant-spin {\n      position: absolute;\n      display: grid;\n      place-items: center;\n      z-index: 4;\n      width: 100%;\n      height: 100%;\n    }\n\n    .ant-spin-blur {\n      opacity: 0.5;\n      user-select: none;\n    }\n  }\n\n  /* hide empty row */\n  .ant-table-placeholder {\n    display: none;\n  }\n\n  .ant-table-tbody {\n    background-color: ${(props) => props.backgroundColor};\n    ${(props) => (props.bodyText === 'sm' ? TextMixin.sm : TextMixin.md)}\n  }\n\n  .ant-table-thead > tr > th {\n    background: ${(props) => props.headerColor};\n    ${(props) => (props.headerText === 'sm' ? TextMixin.sm : TextMixin.md)}\n  }\n\n  .ant-table-thead > tr > th,\n  .ant-table-tbody > tr > td {\n    height: 48px;\n    border: none;\n    border-bottom: 1px solid ${colors.grayLine};\n    padding: 11.5px 14px;\n    word-break: break-all;\n    text-align: left;\n  }\n\n  .ant-table-thead,\n  .ant-table-tbody {\n    & > tr.ant-table-row-hover:not(.ant-table-expanded-row) > td,\n    & > tr:hover:not(.ant-table-expanded-row) > td {\n      background: ${(props) => props.hoverColor};\n    }\n  }\n\n  table {\n    border-spacing: 0;\n  }\n\n  ${media.md`\n    .ant-table-content {\n      overflow-x: auto;\n    }\n  `};\n`;\n\nlet myTimer;\n\nexport const Table = ({\n  headerColor,\n  headerText,\n  backgroundColor,\n  bodyText,\n  children,\n  hoverColor,\n  pagination = {},\n  columns,\n  loading,\n  getItemsHandler,\n  sortOptions = {},\n  dataSource,\n  ...rest\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [current, setCurrent] = useState(1);\n  const { totalItem, limit } = pagination;\n  const { order, orderBy } = sortOptions;\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (getItemsHandler) getItemsHandler(current)();\n  }, [current]);\n\n  // we don't set loading immediately to avoid blinking UI\n  useEffect(() => {\n    if (loading) {\n      myTimer = setTimeout(() => {\n        if (loading) setIsLoading(true);\n      }, 500);\n    } else {\n      clearTimeout(myTimer);\n      setIsLoading(false);\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"table-component\">\n      <TableStyled\n        headerColor={headerColor}\n        headerText={headerText}\n        backgroundColor={backgroundColor}\n        bodyText={bodyText}\n        hoverColor={hoverColor}\n        columns={columns}\n        dataSource={order ? stableSort(dataSource, getComparator(order, orderBy)) : dataSource}\n        loading={isLoading && { indicator: <Loader size=\"25px\" borderSize=\"3px\" /> }}\n        pagination={false}\n        {...rest}\n      >\n        {children}\n      </TableStyled>\n\n      {totalItem && limit < totalItem ? (\n        <Pagination\n          pageSize={limit}\n          onChange={(page) => {\n            setCurrent(page);\n          }}\n          setCurrent={setCurrent}\n          current={current}\n          total={totalItem}\n          showSizeChanger={false}\n          showLessItems\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  headerText: 'sm',\n  bodyText: 'sm',\n  hoverColor: colors.grayBG,\n};\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components/macro';\n\nimport { Text } from 'components/Typography';\nimport { colors } from 'components/Styles/Colors';\nimport { media } from 'components/Styles/Media';\nimport { Loader } from 'components/Loader';\n\nimport { useDispatch, useSelect } from 'hooks/useRematch';\nimport { shortenNumber, toSeparatedNumberString } from 'utils/app';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 16px;\n  margin-top: 13px;\n\n  max-height: 70vh;\n  overflow-x: auto;\n\n  ${media.md`\n    grid-template-columns: 1fr;\n    max-height: 100vh;\n  `};\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #57565a;\n  }\n`;\n\nconst NetworkWrapper = styled.div`\n  padding: 16px 32px 20px;\n  border-radius: 4px;\n  background-color: ${colors.brandSecondaryBase};\n\n  .uppercase {\n    text-transform: uppercase;\n  }\n\n  .all-time,\n  .one-day {\n    display: flex;\n    justify-content: space-between;\n\n    .plain-text.xs {\n      margin-top: 5px;\n      color: ${colors.grayScaleSubText};\n    }\n\n    .values {\n      text-align: right;\n    }\n  }\n\n  .all-time {\n    margin-top: 19px;\n  }\n\n  .devider {\n    border-bottom: solid 1px ${colors.grayLine};\n    margin: 12px 0;\n  }\n`;\n\nconst NetWork = ({ detail = {} }) => {\n  const { nameToken, volume24h, volume24hUSD, volumeAlTimeUSD, volumeAllTime } = detail;\n\n  return (\n    <NetworkWrapper>\n      <Text className=\"md uppercase\">{nameToken}</Text>\n      <div className=\"all-time\">\n        <Text className=\"sm\">All time</Text>\n        <div className=\"values\">\n          <Text className=\"sm uppercase\">\n            {shortenNumber(volumeAllTime)} {nameToken}\n          </Text>\n          <Text className=\"xs\">= ${toSeparatedNumberString(volumeAlTimeUSD)}</Text>\n        </div>\n      </div>\n\n      <div className=\"devider\"></div>\n\n      <div className=\"one-day\">\n        <Text className=\"sm\">24 hour</Text>\n        <div className=\"values\">\n          <Text className=\"sm uppercase\">\n            {shortenNumber(volume24h)} {nameToken}\n          </Text>\n          <Text className=\"xs\">= ${toSeparatedNumberString(volume24hUSD)}</Text>\n        </div>\n      </div>\n    </NetworkWrapper>\n  );\n};\n\nexport const NetwotkDetails = ({ currentNetworkID }) => {\n  const [loading, setLoading] = useState(true);\n\n  const { networkDetails = [] } = useSelect(({ network: { selectNetworkDetails } }) => ({\n    networkDetails: selectNetworkDetails,\n  }));\n\n  const { getNetworkDetails, setNetworkDetails } = useDispatch(\n    ({ network: { getNetworkDetails, setNetworkDetails } }) => ({\n      getNetworkDetails,\n      setNetworkDetails,\n    }),\n  );\n\n  useEffect(() => {\n    if (currentNetworkID) getNetworkDetails(currentNetworkID).then(() => setLoading(false));\n\n    return () => {\n      setNetworkDetails([]);\n    };\n  }, [getNetworkDetails, currentNetworkID, setNetworkDetails]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader size=\"40px\" borderSize=\"3px\" />\n      ) : (\n        <Wrapper>\n          {networkDetails.map((detail) => (\n            <NetWork key={detail.nameToken} detail={detail} />\n          ))}\n        </Wrapper>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\n\nimport { Helmet } from 'components/Helmet';\nimport { Table } from 'components/Table';\nimport { Row } from 'components/Layout';\nimport { Icon } from 'components/Icon';\nimport { Header } from 'components/Typography';\nimport { Modal } from 'components/NotificationModal';\nimport { NetwotkDetails } from './NetwotkDetails';\n\nimport { colors } from 'components/Styles/Colors';\nimport { TextMixin } from 'components/Typography/Text';\nimport { media } from 'components/Styles/Media';\n\nimport { useDispatch, useSelect } from 'hooks/useRematch';\nimport { toSeparatedNumberString } from 'utils/app';\n\nconst Network = ({ iconUrl, name, url }) => {\n  return (\n    <Row className=\"middle\">\n      <Icon className=\"network-icon\" iconURL={iconUrl} size=\"s\" />\n      <div>\n        <div className=\"network-name\">{name}</div>\n        <a href={`https://${url}`} target=\"_blank\" rel=\"noreferrer\" className=\"url\">\n          {url}\n        </a>\n      </div>\n    </Row>\n  );\n};\n\n/* eslint-disable react/display-name */\nconst columns = [\n  {\n    title: '#',\n    dataIndex: 'index',\n    render: (text, record, index) => index + 1,\n    width: '64px',\n    align: 'center',\n  },\n  {\n    title: 'Network',\n    dataIndex: 'name',\n    render: (text, record) => (\n      <Network\n        iconUrl={process.env.REACT_APP_BTP_ENDPOINT + record.pathLogo.substring(1)}\n        name={text}\n        url={record.url}\n      />\n    ),\n    width: '288px',\n  },\n  {\n    title: 'Volume (24hr)',\n    dataIndex: 'usd24h',\n    render: (value) => toSeparatedNumberString(value),\n    width: '256px',\n  },\n  {\n    title: 'Volume (All time)',\n    dataIndex: 'usdAllTime',\n    render: (value) => toSeparatedNumberString(value),\n    width: '256px',\n  },\n  {\n    title: 'Mint fee',\n    dataIndex: 'mintFee',\n    render: (value) => toSeparatedNumberString(value),\n    width: '128px',\n  },\n  {\n    title: 'Burn fee',\n    dataIndex: 'burnFee',\n    render: (value) => toSeparatedNumberString(value),\n    width: '128px',\n  },\n];\n\nconst NetworkStyled = styled.div`\n  max-width: 1120px;\n  margin: auto;\n\n  .main {\n    display: flex;\n    justify-content: center;\n    .content {\n      width: 1120px;\n      ${media.md`\n      width: ${`${window.screen.width}px`};\n    `}\n    }\n  }\n\n  .header-text {\n    padding: 48px 0 50px 0;\n    ${media.md`\n      padding: 20px 0 20px 20px;\n    `}\n  }\n\n  .network-icon {\n    margin-right: 12px;\n  }\n\n  .url {\n    ${TextMixin.sm};\n    color: ${colors.tertiaryBase};\n  }\n\n  .network-name {\n    height: 20px;\n    margin-bottom: 8px;\n  }\n\n  .ant-table-tbody > tr > td {\n    padding: 10px 14px 9px;\n  }\n`;\n\nfunction NetworkPage() {\n  const [currentNetworkID, setCurrentNetworkID] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { networks } = useSelect(({ network: { selectNetwotks } }) => ({\n    networks: selectNetwotks,\n  }));\n\n  const { getNetworks } = useDispatch(({ network: { getNetworks } }) => ({\n    getNetworks,\n  }));\n\n  useEffect(() => {\n    getNetworks().then(() => {\n      setLoading(false);\n    });\n  }, [getNetworks]);\n\n  return (\n    <NetworkStyled>\n      <Helmet title=\"Network\" />\n\n      <div className=\"content\">\n        <Header className=\"md bold\">Networks</Header>\n        <Table\n          rowKey=\"id\"\n          loading={loading && networks.length === 0}\n          columns={columns}\n          dataSource={networks}\n          pagination={false}\n          headerColor={colors.grayAccent}\n          backgroundColor={colors.darkBG}\n          bodyText={'md'}\n          onRow={(r) => ({\n            onClick: () => {\n              setCurrentNetworkID(r.id);\n            },\n          })}\n        />\n      </div>\n      {currentNetworkID && (\n        <Modal\n          display={currentNetworkID}\n          width=\"736px\"\n          title=\"Curve\"\n          setDisplay={setCurrentNetworkID}\n        >\n          <NetwotkDetails currentNetworkID={currentNetworkID} />\n        </Modal>\n      )}\n    </NetworkStyled>\n  );\n}\n\nexport default NetworkPage;\n"],"sourceRoot":""}